{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"JITORM: Just-In-Time Optimized Python ORM","text":"<p>JITORM is an Object-Relational Mapping (ORM) framework for Python, developed to improve performance in database operations by introducing Just-In-Time (JIT) compilation in the mapping process. Unlike conventional ORMs, JITORM transforms data mapping logic into native machine code using LLVM via <code>llvmlite</code>, resulting in higher throughput and lower memory usage.</p>"},{"location":"#what-is-jitorm","title":"\ud83d\udcd8 What is JITORM?","text":"<p>JITORM (Just-In-Time Object-Relational Mapper) is a high-performance Python ORM designed to optimize data mapping operations through Just-In-Time compilation. It translates data access and mapping logic into native machine code using LLVM via the <code>llvmlite</code> library. This approach eliminates interpretation overhead, making it suitable for large-scale, resource-constrained applications.</p> <p>JITORM was developed as part of a research project at Telkom University and is specifically engineered for performance-sensitive scenarios where conventional Python ORMs (like SQLAlchemy, PonyORM, or Tortoise) fall short.</p>"},{"location":"#why-jitorm-is-fast","title":"\u26a1 Why JITORM Is Fast","text":"<ul> <li> <p>JIT Compilation with LLVM: Instead of interpreting Python bytecode for every object mapping operation, JITORM compiles mapping logic into native machine code using <code>llvmlite</code>.</p> </li> <li> <p>Reduced Runtime Overhead: Repetitive operations like <code>bulk_create</code> and <code>get_list</code> benefit from instruction-level optimization.</p> </li> <li> <p>Cached Compilation: Once compiled, the mapping logic is cached and reused, reducing redundant computation on future operations.</p> </li> <li> <p>Low-Level Memory and CPU Efficiency: Benchmarks show up to 99% lower memory use and significantly lower CPU cycles in large-data scenarios.</p> </li> </ul>"},{"location":"#installation","title":"\ud83d\udee0 Installation","text":"<p>Install from GitHub:</p> <pre><code>pip install git+https://github.com/akarkode/jitorm.git\n</code></pre> <p>Dependencies: - Python 3.8+ - <code>llvmlite</code> - <code>numpy</code> - <code>mysqlclient</code>, <code>psycopg2-binary</code> (optional for backend)</p>"},{"location":"#strengths","title":"\u2705 Strengths","text":"<ul> <li> <p>High Performance in Repetitive Workloads   Excellent for <code>bulk_create</code>, <code>get_list</code>, and large-scale insertions.</p> </li> <li> <p>Low Memory Footprint   Demonstrated up to 99% less memory usage vs traditional ORMs at 200K records.</p> </li> <li> <p>Better CPU Efficiency   Native code runs with fewer CPU instructions and less Python overhead.</p> </li> <li> <p>Schema-Aware Caching   Avoids redundant work by reusing compiled mapping logic.</p> </li> <li> <p>Modern Framework Compatibility   Integrates smoothly with FastAPI or Flask with minimal boilerplate.</p> </li> </ul>"},{"location":"#limitations","title":"\u26a0\ufe0f Limitations","text":"<ul> <li> <p>First-Use Compile Overhead   The first-time JIT compilation introduces slight latency.</p> </li> <li> <p>No Advanced ORM Features   No relationship mapping, migrations, transactions, etc.</p> </li> <li> <p>Schema-Sensitive Cache   Manual recompile needed when schema changes.</p> </li> <li> <p>Single-Language, Single-Model Focus   Multi-table and cross-language tests not yet supported.</p> </li> <li> <p>LLVM Dependency   Requires LLVM and <code>llvmlite</code> setup.</p> </li> </ul>"},{"location":"#when-to-use-jitorm","title":"\ud83e\udded When to Use JITORM","text":""},{"location":"#recommended-for","title":"\u2705 Recommended for:","text":"<ul> <li>Repetitive, high-volume operations (50K+ records)</li> <li>Running on constrained environments (low RAM/CPU)</li> <li>Long-living services or analytical tools</li> <li>Replacing traditional ORMs that bottleneck performance</li> </ul>"},{"location":"#not-recommended-for","title":"\u274c Not Recommended for:","text":"<ul> <li>One-off queries or admin panels</li> <li>Projects needing joins, nested relationships, or transactions</li> <li>Rapid schema changes without versioning</li> <li>Real-time low-latency apps sensitive to first-use overhead</li> </ul> <p>\u00a9 2025 AKARKODE \u00b7 Research-backed and Scopus-indexed.</p>"}]}